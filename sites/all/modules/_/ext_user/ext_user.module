<?php

define('ROLE_ADMIN', '3');
define('ROLE_MANAGER_PRODUCTION', '4');
define('ROLE_USER_PRODUCTION', '6');
define('ROLE_MANAGER_WAREHOUSE', '7');
define('ROLE_USER_WAREHOUSE', '5');

define('COMPANY_TD', 3151);


/**
 * Implementation of hook_menu_alter().
 */
function ext_user_menu_alter(&$items)
{
  // убрать восстановление пароля со страницы входа
//  $items['user/password']['access callback'] = false;
}

/**
 * hook_module_implements_alter
 * change hook execution order, commerce_helper - last
 */
function ext_user_module_implements_alter(&$implementations, $hook)
{
  // Name of the hook.
  if (in_array($hook, ['form_alter'])) {
    // ext_user - last
    $module = 'ext_user';
    if (isset($implementations[$module])) {
      $group = $implementations[$module];
      unset($implementations[$module]);
      $implementations[$module] = $group;
    }
  }
}

function ext_user_preprocess_menu_link(&$vars)
{
  if ($vars["element"]["#href"] == 'user' && user_is_logged_in()) {
    // сменить Аккаунт на Имя пользователя
    $vars["element"]["#title"] = $GLOBALS['user']->name;
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function ext_user_form_user_login_alter(&$form, &$form_state)
{
  $form['name']['#title'] = t('E-Mail');
  $form['name']['#element_validate'][] = 'ext_user_login_name_validate';
}

/**
 * Form element validation handler for the user login form.
 *
 * Allows users to authenticate by username OR email.
 */
function ext_user_login_name_validate($form, &$form_state)
{
  $user = ext_user_user_load_by_login($form_state['values']['name']);
  if ($user->uid) {
    $form_state['values']['name'] = $user->name;
    return TRUE;
  }

  return FALSE;
}

/**
 * Implements hook_form_alter().
 */
function ext_user_form_user_profile_form_alter(&$form, &$form_state)
{
  if (!user_has_role(ROLE_ADMIN)) {
    $form["account"]["pass"]["#title"] = t('Password');
    $form["account"]["pass"]["#type"] = 'password';


    if (isset($form["field_wwork_limit"]["#access"])) $form["field_wwork_limit"]["#access"] = false; // уст.
    if (isset($form["field_company"]["#access"])) $form["field_company"]["#access"] = false; // уст.
    if (isset($form["field_oc_davalec_id"]["#access"])) $form["field_oc_davalec_id"]["#access"] = false; // уст.
    $form["field_user_company"]["#access"] = false;
    $form["locale"]["#access"] = false;
    $form["mimemail"]["#access"] = false;
    $form["timezone"]["#access"] = false;
    if (!user_has_role(ROLE_MANAGER_PRODUCTION)) {
      $form["field_notify_query"]["#access"] = false;
    }
    if (!user_has_role(ROLE_USER_PRODUCTION)) {
      $form["field_notify_once_a_day"]["#access"] = false;
    }
  }
}

/**
 * Загрузить пользователя по указанному логину
 * @param $login
 *
 * @return object
 */
function ext_user_user_load_by_login($login)
{
  // Try loading by email.
  if ($user = user_load_by_mail($login)) {
    return $user;
  }

  // Try loading by username.
  if ($user = user_load_by_name($login)) {
    return $user;
  }
  return user_load(0);
}

/**
 * @param $company_id
 * @param $role - можно задать только для Производства или Склада
 * @return array
 */
function ext_user_get_managers_by_client_id($company_id, $role = null)
{
  $users = [];
  if (is_numeric($company_id)) {
    $query = db_select('users', 'u');
    $query ->condition('u.status', 1);
    $query ->fields('u', ['uid']);
    $query ->innerJoin('field_data_field_user_company', 'fc', 'fc.entity_id = u.uid');
    $query ->condition('fc.field_user_company_tid', $company_id);
    if ($role) {
      $query->innerJoin('users_roles', 'ur', 'ur.uid = u.uid');
      $query->condition('ur.rid', $role);
    }
    $uids = $query->execute()->fetchCol();
    if ($uids) {
      $users = user_load_multiple($uids);
    }
  }

  return $users;
}

function ext_user_get_company_by_user($user = null)
{
  if (!$user) $user = user_load($GLOBALS['user']->uid);
  if (is_numeric($user)) {
    $user = user_load($user);
  }

  $company = false;
  $user_wr = entity_metadata_wrapper('user', $user);
  if ($user_wr->field_user_company->value()) {
    $company = [
      'id' => $user_wr->field_user_company->getIdentifier(),
      'name' => $user_wr->field_user_company->label(),
      'wwork_limit' => $user_wr->field_user_company->field_wwork_limit->value(),
      '1c_id' => $user_wr->field_user_company->field_1c_id->value(),
    ];
  }
  return $company;
}
